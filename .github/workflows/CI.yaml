name: CI

on:
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: ms-echo # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: "." # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: "16.x" # set this to the node version to use
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  UnitTests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Download dependencies
        run: npm i

      - name: Run Test
        run: npm run test
  SAST:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Download dependencies
        run: npm i

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [SAST, UnitTests]
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: docker build . -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - uses: Azure/container-scan@v0
        with:
          image-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  Dispatch:
    needs: [build-and-push-image]
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2

        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: bankwing/azure-cd-node-webapp-container
          event-type: my-event
          client-payload: '{"appname": "${{ env.AZURE_WEBAPP_NAME }}" ,"imagename": "${{ env.IMAGE_NAME }}", "imagetag": "${{ github.sha }}"}'
  # sca:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ env.NODE_VERSION }}
  #       cache: 'npm'

  #   - name: Download dependencies
  #     run: npm i

  #   - name: Depcheck
  #     uses: dependency-check/Dependency-Check_Action@main
  #     id: Depcheck
  #     with:
  #       project: 'node-echo'
  #       path: '.'
  #       format: 'HTML'
  #       out: 'reports' # this is the default, no need to specify unless you wish to override it
  #       args: >
  #         --failOnCVSS 7
  #         --enableRetired
  #         --nodeAuditSkipDevDependencies
  #         --disableNodeAudit
  #   - name: Upload Test results
  #     uses: actions/upload-artifact@master
  #     with:
  #        name: Depcheck report
  #        path: ${{github.workspace}}/reports

  # dispatch:
  #   runs-on: ubuntu-latest
  #   needs: [sast, unittest]
  # Dispatch:
  #   needs: [sast, unittest]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Repository Dispatch
  #     uses: peter-evans/repository-dispatch@v2

  #     with:
  #       token: ${{ secrets.REPO_ACCESS_TOKEN }}
  #       repository: bankwing/azure-java-demo-pipeline
  #       event-type: my-event
  #       client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

  # call-deploy-workflow-passing-data:
  #   uses: https://github.com/bankwing/azure-java-demo-pipeline@main
  #   secrets:
  #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  #     AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
